/*
 * Copyright (c) 2016 ARM Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This library is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This library is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

#include "sun50i-a64-pine64.dts"

/ {
	model = "Pine64+";
	compatible = "pine64,pine64-plus", "allwinner,sun50i-a64";

	/* TODO: Camera, touchscreen, etc. */
/*
	hdmi-connector {
		compatible = "hdmi-connector";
		type = "a";

		port {
			hdmi_con_in: endpoint {
				remote-endpoint = <&hdmi_out_con>;
			};
		};
	};
*/


	wifi_pwrseq: wifi_pwrseq {
		compatible = "mmc-pwrseq-simple";
		reset-gpios = <&r_pio 0 2 GPIO_ACTIVE_LOW>;
	};

/*
	mmc2_ds_pin: mmc2-ds-pin {
                                pins = "PC1";
                                function = "mmc2";
                                drive-strength = <30>;
                                bias-pull-up;
                        };

*/

};

&emac {
	pinctrl-names = "default";
	pinctrl-0 = <&rgmii_pins>;
	phy-mode = "rgmii";
	phy-handle = <&ext_rgmii_phy>;
	status = "okay";
};


&mmc1 {

	pinctrl-names = "default";
	status = "okay";
	pinctrl-0 = <&mmc1_pins>;
	vmmc-supply = <&reg_dldo4>;
	vqmmc-supply = <&reg_eldo1>;
	mmc-pwrseq = <&wifi_pwrseq>;
	non-removable;

	brcmf: wifi@1 {
		reg = <1>;
		compatible = "brcm,bcm43430-fmac";
		interrupt-parent = <&r_pio>;
		interrupts = <0 3 IRQ_TYPE_LEVEL_LOW>; /* PL3 */
		interrupt-names = "host-wake";
	};

};


&codec {
        status = "okay";
};

&codec_analog {
        hpvcc-supply = <&reg_eldo1>;
        status = "okay";
};

&dai {
        status = "okay";
};

&de {
        status = "okay";
};



&ehci0 {
        status = "okay";
};

&ehci1 {
        status = "okay";
};

/*
&i2s1 {
        status = "okay";
};
*/

&mmc2 {
        pinctrl-names = "default";
        pinctrl-0 = <&mmc2_pins>, <&mmc2_ds_pin>;
        vmmc-supply = <&reg_dcdc1>;
/*      vqmmc-supply = <&reg_eldo1>;*/
        vqmmc-supply = <&reg_dcdc1>;
        bus-width = <8>;
        non-removable;
        cap-mmc-hw-reset;
        mmc-hs200-1_8v;
        status = "okay";
};


&ohci0 {
        status = "okay";
};

&ohci1 {
        status = "okay";
};



&mdio {
	ext_rgmii_phy: ethernet-phy@1 {
		compatible = "ethernet-phy-ieee802.3-c22";
		reg = <1>;
	};
};

/*HDMI*/
/*
&hdmi {
        hvcc-supply = <&reg_dldo1>;
        status = "okay";
};

&hdmi_out {
        hdmi_out_con: endpoint {
                remote-endpoint = <&hdmi_con_in>;
        };
};


&simplefb_hdmi {
        vcc-hdmi-supply = <&reg_dldo1>;
};
*/

&sound {
        simple-audio-card,aux-devs = <&codec_analog>;
        simple-audio-card,widgets = "Microphone", "Microphone Jack",
                                    "Headphone", "Headphone Jack";
        simple-audio-card,routing =
                        "Left DAC", "AIF1 Slot 0 Left",
                        "Right DAC", "AIF1 Slot 0 Right",
                        "Headphone Jack", "HP",
                        "AIF1 Slot 0 Left ADC", "Left ADC",
                        "AIF1 Slot 0 Right ADC", "Right ADC",
                        "MIC2", "Microphone Jack";
        status = "okay";
};

